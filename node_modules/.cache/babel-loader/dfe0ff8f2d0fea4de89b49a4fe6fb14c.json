{"ast":null,"code":"var _jsxFileName = \"/home/lestradde/Desktop/react/my-app/src/widget.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport './widget.scss';\nimport ReactDOM from \"react-dom\";\nimport Form from \"./Form\";\n\nclass Widget extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      opened: false,\n      showDock: true,\n      send: false\n    };\n\n    this.handleToggleOpen = () => {\n      this.setState(prev => {\n        let {\n          showDock\n        } = prev;\n\n        if (!prev.opened) {\n          showDock = false;\n        }\n\n        return {\n          showDock,\n          opened: !prev.opened\n        };\n      });\n    };\n\n    this.handleWidgetExit = () => {\n      this.setState({\n        showDock: true\n      });\n    };\n\n    this.renderBody = () => {\n      const {\n        showDock\n      } = this.state;\n      const {\n        send\n      } = this.state;\n      if (!showDock && send) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"hello yopt\");\n      if (!showDock) return '';\n      return React.createElement(\"button\", {\n        type: \"button\",\n        className: \"dock\",\n        onClick: this.handleToggleOpen,\n        onKeyPress: this.handleToggleOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"^ OPEN ^\");\n    };\n  }\n\n  message(temperature) {\n    this.setState({\n      scale: 'c',\n      temperature\n    });\n  }\n\n  render() {\n    const {\n      opened\n    } = this.state;\n    const body = this.renderBody();\n    const {\n      bodyText,\n      headerText,\n      footerText\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"docked-widget\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Transition, {\n      in: opened,\n      timeout: 10,\n      onExited: this.handleWidgetExit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, status => React.createElement(\"div\", {\n      className: `widget widget-${status}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"widget-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"widget-header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, headerText)), React.createElement(\"div\", {\n      className: \"widget-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, bodyText, \"message = \", this.message(), React.createElement(Form, {\n      name: bodyText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"widget-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, footerText, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"widget-footer-shift\",\n      onClick: this.handleToggleOpen,\n      onKeyPress: this.handleToggleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"X\")))), body);\n  }\n\n}\n\nWidget.propTypes = {\n  headerText: PropTypes.string,\n  bodyText: PropTypes.string,\n  footerText: PropTypes.string\n};\nWidget.defaultProps = {\n  headerText: 'Бот',\n  bodyText: 'Привет,я онлайн',\n  footerText: 'Footer'\n};\nexport default Widget;","map":{"version":3,"sources":["/home/lestradde/Desktop/react/my-app/src/widget.js"],"names":["React","Component","PropTypes","Transition","ReactDOM","Form","Widget","state","opened","showDock","send","handleToggleOpen","setState","prev","handleWidgetExit","renderBody","message","temperature","scale","render","body","bodyText","headerText","footerText","props","status","propTypes","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport './widget.scss';\nimport ReactDOM from \"react-dom\";\nimport Form from \"./Form\";\n\nclass Widget extends Component {\n    state = {\n        opened: false,\n        showDock: true,\n        send: false,\n    }\n\n    handleToggleOpen = () => {\n        this.setState((prev) => {\n            let { showDock } = prev;\n            if (!prev.opened) {\n                showDock = false;\n            }\n            return {\n                showDock,\n                opened: !prev.opened,\n            };\n        });\n    }\n\n    handleWidgetExit = () => {\n        this.setState({\n            showDock: true,\n        });\n    }\n\n    renderBody = () => {\n        const { showDock } = this.state;\n        const { send } = this.state;\n\n        if (!showDock && send) return (\n            <div>hello yopt</div>\n        );\n\n        if (!showDock) return '';\n\n        return (\n            <button\n                type=\"button\"\n                className=\"dock\"\n                onClick={this.handleToggleOpen}\n                onKeyPress={this.handleToggleOpen}\n            >\n                ^ OPEN ^\n            </button>\n        );\n    }\n\n    message(temperature) {\n        this.setState({scale: 'c', temperature});\n    }\n\n    render() {\n        const { opened } = this.state;\n        const body = this.renderBody();\n        const { bodyText, headerText, footerText } = this.props;\n\n        return (\n            <div className=\"docked-widget\">\n                <Transition in={opened} timeout={10} onExited={this.handleWidgetExit}>\n                    {status => (\n                        <div className={`widget widget-${status}`}>\n                            <div className=\"widget-header\">\n                                <div className=\"widget-header-title\">\n                                    {headerText}\n                                </div>\n\n                            </div>\n                            <div className=\"widget-body\">\n                                {bodyText}\n                                message = {this.message()}\n                                <Form name = {bodyText}/>\n                            </div>\n                            <div className=\"widget-footer\">\n                                {footerText}\n                                <button\n                                    type=\"button\"\n                                    className=\"widget-footer-shift\"\n                                    onClick={this.handleToggleOpen}\n                                    onKeyPress={this.handleToggleOpen}\n                                >\n                                    X\n                                </button>\n                            </div>\n                        </div>\n                    )}\n                </Transition>\n                {body}\n            </div>\n        );\n    }\n}\n\nWidget.propTypes = {\n    headerText: PropTypes.string,\n    bodyText: PropTypes.string,\n    footerText: PropTypes.string,\n};\n\nWidget.defaultProps = {\n    headerText: 'Бот',\n    bodyText: 'Привет,я онлайн',\n    footerText: 'Footer',\n};\n\nexport default Widget;"]},"metadata":{},"sourceType":"module"}